// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: prototypes/org.proto

package prototypes // import "github.com/linkai-io/am/protocservices/prototypes"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Org struct {
	OrgID                   int32    `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	OrgCID                  string   `protobuf:"bytes,2,opt,name=OrgCID,proto3" json:"OrgCID,omitempty"`
	OrgName                 string   `protobuf:"bytes,3,opt,name=OrgName,proto3" json:"OrgName,omitempty"`
	OwnerEmail              string   `protobuf:"bytes,4,opt,name=OwnerEmail,proto3" json:"OwnerEmail,omitempty"`
	UserPoolID              string   `protobuf:"bytes,5,opt,name=UserPoolID,proto3" json:"UserPoolID,omitempty"`
	UserPoolAppClientID     string   `protobuf:"bytes,6,opt,name=UserPoolAppClientID,proto3" json:"UserPoolAppClientID,omitempty"`
	UserPoolAppClientSecret string   `protobuf:"bytes,7,opt,name=UserPoolAppClientSecret,proto3" json:"UserPoolAppClientSecret,omitempty"`
	IdentityPoolID          string   `protobuf:"bytes,8,opt,name=IdentityPoolID,proto3" json:"IdentityPoolID,omitempty"`
	FirstName               string   `protobuf:"bytes,9,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName                string   `protobuf:"bytes,10,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Phone                   string   `protobuf:"bytes,11,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Country                 string   `protobuf:"bytes,12,opt,name=Country,proto3" json:"Country,omitempty"`
	StatePrefecture         string   `protobuf:"bytes,13,opt,name=StatePrefecture,proto3" json:"StatePrefecture,omitempty"`
	Street                  string   `protobuf:"bytes,14,opt,name=Street,proto3" json:"Street,omitempty"`
	Address1                string   `protobuf:"bytes,15,opt,name=Address1,proto3" json:"Address1,omitempty"`
	Address2                string   `protobuf:"bytes,16,opt,name=Address2,proto3" json:"Address2,omitempty"`
	City                    string   `protobuf:"bytes,17,opt,name=City,proto3" json:"City,omitempty"`
	PostalCode              string   `protobuf:"bytes,18,opt,name=PostalCode,proto3" json:"PostalCode,omitempty"`
	CreationTime            int64    `protobuf:"varint,19,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
	StatusID                int32    `protobuf:"varint,20,opt,name=StatusID,proto3" json:"StatusID,omitempty"`
	Deleted                 bool     `protobuf:"varint,21,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	SubscriptionID          int32    `protobuf:"varint,22,opt,name=SubscriptionID,proto3" json:"SubscriptionID,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Org) Reset()         { *m = Org{} }
func (m *Org) String() string { return proto.CompactTextString(m) }
func (*Org) ProtoMessage()    {}
func (*Org) Descriptor() ([]byte, []int) {
	return fileDescriptor_org_ced17a7200b42307, []int{0}
}
func (m *Org) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Org) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Org.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Org) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Org.Merge(dst, src)
}
func (m *Org) XXX_Size() int {
	return m.Size()
}
func (m *Org) XXX_DiscardUnknown() {
	xxx_messageInfo_Org.DiscardUnknown(m)
}

var xxx_messageInfo_Org proto.InternalMessageInfo

func (m *Org) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *Org) GetOrgCID() string {
	if m != nil {
		return m.OrgCID
	}
	return ""
}

func (m *Org) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *Org) GetOwnerEmail() string {
	if m != nil {
		return m.OwnerEmail
	}
	return ""
}

func (m *Org) GetUserPoolID() string {
	if m != nil {
		return m.UserPoolID
	}
	return ""
}

func (m *Org) GetUserPoolAppClientID() string {
	if m != nil {
		return m.UserPoolAppClientID
	}
	return ""
}

func (m *Org) GetUserPoolAppClientSecret() string {
	if m != nil {
		return m.UserPoolAppClientSecret
	}
	return ""
}

func (m *Org) GetIdentityPoolID() string {
	if m != nil {
		return m.IdentityPoolID
	}
	return ""
}

func (m *Org) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Org) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Org) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Org) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Org) GetStatePrefecture() string {
	if m != nil {
		return m.StatePrefecture
	}
	return ""
}

func (m *Org) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Org) GetAddress1() string {
	if m != nil {
		return m.Address1
	}
	return ""
}

func (m *Org) GetAddress2() string {
	if m != nil {
		return m.Address2
	}
	return ""
}

func (m *Org) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Org) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Org) GetCreationTime() int64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *Org) GetStatusID() int32 {
	if m != nil {
		return m.StatusID
	}
	return 0
}

func (m *Org) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Org) GetSubscriptionID() int32 {
	if m != nil {
		return m.SubscriptionID
	}
	return 0
}

type OrgFilter struct {
	Start                int32    `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	WithSubcription      bool     `protobuf:"varint,3,opt,name=WithSubcription,proto3" json:"WithSubcription,omitempty"`
	SubValue             bool     `protobuf:"varint,4,opt,name=SubValue,proto3" json:"SubValue,omitempty"`
	SinceCreationTime    int64    `protobuf:"varint,5,opt,name=SinceCreationTime,proto3" json:"SinceCreationTime,omitempty"`
	WithStatus           bool     `protobuf:"varint,6,opt,name=WithStatus,proto3" json:"WithStatus,omitempty"`
	StatusValue          bool     `protobuf:"varint,7,opt,name=StatusValue,proto3" json:"StatusValue,omitempty"`
	WithDeleted          bool     `protobuf:"varint,8,opt,name=WithDeleted,proto3" json:"WithDeleted,omitempty"`
	DeletedValue         bool     `protobuf:"varint,9,opt,name=DeletedValue,proto3" json:"DeletedValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrgFilter) Reset()         { *m = OrgFilter{} }
func (m *OrgFilter) String() string { return proto.CompactTextString(m) }
func (*OrgFilter) ProtoMessage()    {}
func (*OrgFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_org_ced17a7200b42307, []int{1}
}
func (m *OrgFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OrgFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrgFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *OrgFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgFilter.Merge(dst, src)
}
func (m *OrgFilter) XXX_Size() int {
	return m.Size()
}
func (m *OrgFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgFilter.DiscardUnknown(m)
}

var xxx_messageInfo_OrgFilter proto.InternalMessageInfo

func (m *OrgFilter) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *OrgFilter) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *OrgFilter) GetWithSubcription() bool {
	if m != nil {
		return m.WithSubcription
	}
	return false
}

func (m *OrgFilter) GetSubValue() bool {
	if m != nil {
		return m.SubValue
	}
	return false
}

func (m *OrgFilter) GetSinceCreationTime() int64 {
	if m != nil {
		return m.SinceCreationTime
	}
	return 0
}

func (m *OrgFilter) GetWithStatus() bool {
	if m != nil {
		return m.WithStatus
	}
	return false
}

func (m *OrgFilter) GetStatusValue() bool {
	if m != nil {
		return m.StatusValue
	}
	return false
}

func (m *OrgFilter) GetWithDeleted() bool {
	if m != nil {
		return m.WithDeleted
	}
	return false
}

func (m *OrgFilter) GetDeletedValue() bool {
	if m != nil {
		return m.DeletedValue
	}
	return false
}

func init() {
	proto.RegisterType((*Org)(nil), "Org")
	proto.RegisterType((*OrgFilter)(nil), "OrgFilter")
}
func (m *Org) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Org) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.OrgID != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.OrgID))
	}
	if len(m.OrgCID) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.OrgCID)))
		i += copy(dAtA[i:], m.OrgCID)
	}
	if len(m.OrgName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.OrgName)))
		i += copy(dAtA[i:], m.OrgName)
	}
	if len(m.OwnerEmail) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.OwnerEmail)))
		i += copy(dAtA[i:], m.OwnerEmail)
	}
	if len(m.UserPoolID) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.UserPoolID)))
		i += copy(dAtA[i:], m.UserPoolID)
	}
	if len(m.UserPoolAppClientID) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.UserPoolAppClientID)))
		i += copy(dAtA[i:], m.UserPoolAppClientID)
	}
	if len(m.UserPoolAppClientSecret) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.UserPoolAppClientSecret)))
		i += copy(dAtA[i:], m.UserPoolAppClientSecret)
	}
	if len(m.IdentityPoolID) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.IdentityPoolID)))
		i += copy(dAtA[i:], m.IdentityPoolID)
	}
	if len(m.FirstName) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.Country) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.Country)))
		i += copy(dAtA[i:], m.Country)
	}
	if len(m.StatePrefecture) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.StatePrefecture)))
		i += copy(dAtA[i:], m.StatePrefecture)
	}
	if len(m.Street) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.Street)))
		i += copy(dAtA[i:], m.Street)
	}
	if len(m.Address1) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.Address1)))
		i += copy(dAtA[i:], m.Address1)
	}
	if len(m.Address2) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.Address2)))
		i += copy(dAtA[i:], m.Address2)
	}
	if len(m.City) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.City)))
		i += copy(dAtA[i:], m.City)
	}
	if len(m.PostalCode) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOrg(dAtA, i, uint64(len(m.PostalCode)))
		i += copy(dAtA[i:], m.PostalCode)
	}
	if m.CreationTime != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.CreationTime))
	}
	if m.StatusID != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.StatusID))
	}
	if m.Deleted {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		if m.Deleted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SubscriptionID != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.SubscriptionID))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *OrgFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrgFilter) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Start != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.Start))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.Limit))
	}
	if m.WithSubcription {
		dAtA[i] = 0x18
		i++
		if m.WithSubcription {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SubValue {
		dAtA[i] = 0x20
		i++
		if m.SubValue {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SinceCreationTime != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintOrg(dAtA, i, uint64(m.SinceCreationTime))
	}
	if m.WithStatus {
		dAtA[i] = 0x30
		i++
		if m.WithStatus {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.StatusValue {
		dAtA[i] = 0x38
		i++
		if m.StatusValue {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.WithDeleted {
		dAtA[i] = 0x40
		i++
		if m.WithDeleted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.DeletedValue {
		dAtA[i] = 0x48
		i++
		if m.DeletedValue {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintOrg(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Org) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrgID != 0 {
		n += 1 + sovOrg(uint64(m.OrgID))
	}
	l = len(m.OrgCID)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.OrgName)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.OwnerEmail)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.UserPoolID)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.UserPoolAppClientID)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.UserPoolAppClientSecret)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.IdentityPoolID)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.StatePrefecture)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.Street)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.Address1)
	if l > 0 {
		n += 1 + l + sovOrg(uint64(l))
	}
	l = len(m.Address2)
	if l > 0 {
		n += 2 + l + sovOrg(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 2 + l + sovOrg(uint64(l))
	}
	l = len(m.PostalCode)
	if l > 0 {
		n += 2 + l + sovOrg(uint64(l))
	}
	if m.CreationTime != 0 {
		n += 2 + sovOrg(uint64(m.CreationTime))
	}
	if m.StatusID != 0 {
		n += 2 + sovOrg(uint64(m.StatusID))
	}
	if m.Deleted {
		n += 3
	}
	if m.SubscriptionID != 0 {
		n += 2 + sovOrg(uint64(m.SubscriptionID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OrgFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Start != 0 {
		n += 1 + sovOrg(uint64(m.Start))
	}
	if m.Limit != 0 {
		n += 1 + sovOrg(uint64(m.Limit))
	}
	if m.WithSubcription {
		n += 2
	}
	if m.SubValue {
		n += 2
	}
	if m.SinceCreationTime != 0 {
		n += 1 + sovOrg(uint64(m.SinceCreationTime))
	}
	if m.WithStatus {
		n += 2
	}
	if m.StatusValue {
		n += 2
	}
	if m.WithDeleted {
		n += 2
	}
	if m.DeletedValue {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovOrg(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozOrg(x uint64) (n int) {
	return sovOrg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Org) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOrg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Org: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Org: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrgID", wireType)
			}
			m.OrgID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrgID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrgCID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrgCID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrgName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrgName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserPoolID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserPoolID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserPoolAppClientID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserPoolAppClientID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserPoolAppClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserPoolAppClientSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityPoolID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityPoolID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatePrefecture", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatePrefecture = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Street", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Street = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostalCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOrg
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostalCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTime", wireType)
			}
			m.CreationTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreationTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusID", wireType)
			}
			m.StatusID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StatusID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deleted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Deleted = bool(v != 0)
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriptionID", wireType)
			}
			m.SubscriptionID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubscriptionID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOrg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOrg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OrgFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOrg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrgFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrgFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithSubcription", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithSubcription = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubValue", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubValue = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SinceCreationTime", wireType)
			}
			m.SinceCreationTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SinceCreationTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithStatus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithStatus = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusValue", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StatusValue = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithDeleted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithDeleted = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedValue", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeletedValue = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipOrg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOrg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOrg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOrg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthOrg
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowOrg
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipOrg(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthOrg = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOrg   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("prototypes/org.proto", fileDescriptor_org_ced17a7200b42307) }

var fileDescriptor_org_ced17a7200b42307 = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xc9, 0xba, 0xb4, 0xa9, 0x37, 0x36, 0xe6, 0x95, 0x61, 0x21, 0x54, 0x55, 0xbd, 0x40,
	0xbd, 0x80, 0x95, 0x8d, 0x1b, 0x6e, 0x47, 0xc2, 0xa4, 0x48, 0x13, 0xa9, 0x12, 0xfe, 0x48, 0xdc,
	0xa5, 0xe9, 0x21, 0xb5, 0x48, 0xe2, 0xca, 0x71, 0x40, 0x7d, 0x13, 0xde, 0x83, 0x4b, 0x5e, 0x80,
	0x4b, 0x1e, 0x01, 0x95, 0x17, 0x41, 0x3e, 0x6e, 0xfa, 0x6f, 0xec, 0xce, 0xdf, 0xef, 0x3b, 0x76,
	0xec, 0xef, 0x1c, 0x85, 0x74, 0x66, 0x52, 0x28, 0xa1, 0xe6, 0x33, 0x28, 0x87, 0x42, 0xa6, 0xe7,
	0x28, 0xfb, 0x3f, 0x6d, 0xd2, 0x08, 0x64, 0x4a, 0x3b, 0xc4, 0x0e, 0x64, 0xea, 0x7b, 0xcc, 0xea,
	0x59, 0x03, 0x3b, 0x34, 0x82, 0x9e, 0x91, 0x66, 0x20, 0x53, 0xd7, 0xf7, 0xd8, 0x5e, 0xcf, 0x1a,
	0xb4, 0xc3, 0xa5, 0xa2, 0x8c, 0xb4, 0x02, 0x99, 0xbe, 0x8d, 0x73, 0x60, 0x0d, 0x34, 0x6a, 0x49,
	0xbb, 0x84, 0x04, 0xdf, 0x0a, 0x90, 0x6f, 0xf2, 0x98, 0x67, 0x6c, 0x1f, 0xcd, 0x0d, 0xa2, 0xfd,
	0xf7, 0x25, 0xc8, 0x91, 0x10, 0x99, 0xef, 0x31, 0xdb, 0xf8, 0x6b, 0x42, 0x5f, 0x90, 0xd3, 0x5a,
	0x5d, 0xcd, 0x66, 0x6e, 0xc6, 0xa1, 0x50, 0xbe, 0xc7, 0x9a, 0x58, 0xf8, 0x3f, 0x8b, 0xbe, 0x22,
	0x8f, 0x6e, 0xe1, 0x08, 0x12, 0x09, 0x8a, 0xb5, 0x70, 0xd7, 0x5d, 0x36, 0x7d, 0x4a, 0x8e, 0xfc,
	0x09, 0x14, 0x8a, 0xab, 0xf9, 0xf2, 0x3e, 0x0e, 0x6e, 0xd8, 0xa1, 0xf4, 0x09, 0x69, 0x5f, 0x73,
	0x59, 0x2a, 0x7c, 0x6f, 0x1b, 0x4b, 0xd6, 0x80, 0x3e, 0x26, 0xce, 0x4d, 0xbc, 0x34, 0x09, 0x9a,
	0x2b, 0xad, 0x53, 0x1d, 0x4d, 0x45, 0x01, 0xec, 0x00, 0x0d, 0x23, 0x74, 0x7a, 0xae, 0xa8, 0x0a,
	0x25, 0xe7, 0xec, 0xd0, 0xa4, 0xb7, 0x94, 0x74, 0x40, 0x8e, 0x23, 0x15, 0x2b, 0x18, 0x49, 0xf8,
	0x0c, 0x89, 0xaa, 0x24, 0xb0, 0xfb, 0x58, 0xb1, 0x8b, 0x75, 0x67, 0x22, 0x25, 0x01, 0x14, 0x3b,
	0x32, 0x9d, 0x31, 0x4a, 0xdf, 0xe6, 0x6a, 0x32, 0x91, 0x50, 0x96, 0x17, 0xec, 0xd8, 0xdc, 0xa6,
	0xd6, 0x1b, 0xde, 0x25, 0x7b, 0xb0, 0xe5, 0x5d, 0x52, 0x4a, 0xf6, 0x5d, 0xae, 0xe6, 0xec, 0x04,
	0x39, 0xae, 0x75, 0xaf, 0x46, 0xa2, 0x54, 0x71, 0xe6, 0x8a, 0x09, 0x30, 0x6a, 0x7a, 0xb5, 0x26,
	0xb4, 0x4f, 0x0e, 0x5d, 0x09, 0xb1, 0xe2, 0xa2, 0x78, 0xc7, 0x73, 0x60, 0xa7, 0x3d, 0x6b, 0xd0,
	0x08, 0xb7, 0x98, 0xfe, 0xa6, 0xbe, 0x7a, 0x55, 0xfa, 0x1e, 0xeb, 0xe0, 0x68, 0xad, 0xb4, 0xce,
	0xc1, 0x83, 0x0c, 0x14, 0x4c, 0xd8, 0xc3, 0x9e, 0x35, 0x70, 0xc2, 0x5a, 0xea, 0xce, 0x44, 0xd5,
	0xb8, 0x4c, 0x24, 0x9f, 0xe9, 0x93, 0x7c, 0x8f, 0x9d, 0xe1, 0xde, 0x1d, 0xda, 0xff, 0xb1, 0x47,
	0xda, 0x81, 0x4c, 0xaf, 0x79, 0xa6, 0x40, 0xea, 0xb4, 0x23, 0x15, 0x4b, 0x55, 0xcf, 0x30, 0x0a,
	0x4d, 0x6f, 0x78, 0xce, 0x15, 0x8e, 0xb0, 0x1d, 0x1a, 0xa1, 0x93, 0xfe, 0xc8, 0xd5, 0x34, 0xaa,
	0xc6, 0xf5, 0x71, 0x38, 0xc9, 0x4e, 0xb8, 0x8b, 0xf1, 0x05, 0xd5, 0xf8, 0x43, 0x9c, 0x55, 0x80,
	0xf3, 0xec, 0x84, 0x2b, 0x4d, 0x9f, 0x91, 0x93, 0x88, 0x17, 0x09, 0x6c, 0xc5, 0x60, 0x63, 0x0c,
	0xb7, 0x0d, 0x9d, 0x27, 0x1e, 0x8e, 0xef, 0xc7, 0x91, 0x76, 0xc2, 0x0d, 0x42, 0x7b, 0xe4, 0xc0,
	0xac, 0xcc, 0xc7, 0x5a, 0x58, 0xb0, 0x89, 0x74, 0x85, 0xae, 0xaf, 0x53, 0x73, 0x4c, 0xc5, 0x06,
	0xd2, 0x3d, 0x59, 0x2e, 0xcd, 0x21, 0x6d, 0x2c, 0xd9, 0x62, 0xaf, 0xdd, 0x5f, 0x8b, 0xae, 0xf5,
	0x7b, 0xd1, 0xb5, 0xfe, 0x2c, 0xba, 0xd6, 0xf7, 0xbf, 0xdd, 0x7b, 0x9f, 0x2e, 0x52, 0xae, 0xa6,
	0xd5, 0xf8, 0x3c, 0x11, 0xf9, 0x30, 0xe3, 0xc5, 0x97, 0x98, 0x3f, 0xe7, 0x62, 0x18, 0xe7, 0x43,
	0xfc, 0x49, 0x24, 0x25, 0xc8, 0xaf, 0x3c, 0x81, 0x72, 0xb8, 0xfe, 0x85, 0x8c, 0x9b, 0xb8, 0x7e,
	0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x95, 0xb1, 0x2b, 0x7d, 0x57, 0x04, 0x00, 0x00,
}
